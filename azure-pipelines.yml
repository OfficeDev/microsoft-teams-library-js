variables:
  - group: InfoSec-SecurityResults
  - name: products
    value: 6eff390d-80c0-4456-81b6-6abafa71e768
  - name: tags
    value: production

trigger:
  branches:
    include:
      - 'main'
      - 'release/*'

resources:
  repositories:
    - repository: OfficePipelineTemplates
      type: git
      name: 1ESPipelineTemplates/OfficePipelineTemplates
      ref: refs/tags/release
    - repository: AppHostingSdk
      type: git
      name: ISS/metaos-hub-sdk
      ref: refs/heads/main
    - repository: AndroidAppHostingSdk
      type: git
      name: ISS/metaos-hub-sdk-android
    - repository: IOSAppHostingSdk
      type: git
      name: ISS/metaos-hub-sdk-ios

extends:
  template: v1/Office.Official.PipelineTemplate.yml@OfficePipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-2022
      os: windows
    sdl:
      eslint:
        configuration: 'required'
        parser: '@typescript-eslint/parser'
        parserOptions: 'ecmaFeatures:{jsx:true}\necmaVersion:12\nsourceType:module\nproject:$(Build.SourcesDirectory)/tsconfig.common.json'
        enableExclusions: true
        exclusionPatterns": "*.d.ts\n*.spec.js\n*.spec.jsx\n*.spec.ts\n*.spec.tsx\n*.test.ts\n*.test.tsx"
        customEnvironments: true
        environmentsBrowser: true
        environmentsNode: true
        environmentsCommonJs: true
        environmentsSharedNodeBrowser: false
        environmentsEs6: false
        environmentsEs2017: false
        environmentsEs2020: true
        environmentsJest: false
      sourceRepositoriesToScan:
        include:
          - repository: AppHostingSdk
          - repository: AndroidAppHostingSdk
          - repository: IOSAppHostingSdk
    customBuildTags:
      - ES365AIMigrationTooling
    stages:
      - stage: __default
        jobs:
          - job: Security
            displayName: 'Security Tasks'
            steps:
              - template: tools/yaml-templates/security.yml@self

          - job: Build
            displayName: 'Build Test Publish'
            steps:
              - template: tools/yaml-templates/build-test-publish.yml@self

            templateContext:
              outputs:
                - output: pipelineArtifact
                  displayName: 'Publish bundle analysis'
                  condition: and( in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues'), eq(variables['Build.Reason'], 'PullRequest'), eq(variables['System.PullRequest.TargetBranch'], 'main'))
                  targetPath: './common/temp/bundleAnalysis'
                  artifactName: '$(bundleArtifactName)'

                - output: pipelineArtifact
                  displayName: 'Publish Test app artifacts'
                  targetPath: '$(Build.ArtifactStagingDirectory)\teams-test-app\$(Build.BuildId).zip'
                  artifactName: 'teams-test-app'
                  sbomBuildDropPath: '$(Build.ArtifactStagingDirectory)\teams-test-app'
                  sbomPackageName: 'teamstestappArtifact'

                - output: pipelineArtifact
                  displayName: 'Publish CDN feed to build Artifacts'
                  targetPath: '$(Build.ArtifactStagingDirectory)\CDNFeed'
                  artifactName: 'CDNFeed'

                - output: pipelineArtifact
                  displayName: 'Publish validDomains to Build Artifacts'
                  targetPath: '$(Build.ArtifactStagingDirectory)\validDomains'
                  artifactName: 'validDomains'

                - output: pipelineArtifact
                  displayName: 'Publish NPM feed to Build Artifacts'
                  targetPath: '$(Build.ArtifactStagingDirectory)\NPMFeed'
                  artifactName: 'NPMFeed'

                - output: pipelineArtifact
                  displayName: 'Publish Powershell Scripts to Build Artifacts'
                  targetPath: '$(Build.ArtifactStagingDirectory)\scripts'
                  artifactName: 'scripts'

          - job: E2ETest1
            displayName: 'E2E Test - Perf'
            pool:
              name: Azure-Pipelines-1ESPT-ExDShared
              image: 'ubuntu-latest'
              os: linux
            steps:
              - template: tools/yaml-templates/build-app-host.yml@self
                parameters:
                  appHostGitPath: AppHostingSdk

              - task: Bash@3
                displayName: 'Run E2E Perf tests'
                condition: succeeded()
                inputs:
                  targetType: inline
                  script: 'pnpm exec ts-node tools/cli/runAppsWithE2ETests.ts --appUrl=https://localhost:4002 --reportFileName=e2e-tests-report-perf --envType=perf'
                  workingDirectory: '$(AppHostingSdkProjectDirectory)'

              - task: PublishTestResults@2
                inputs:
                  testResultsFormat: 'JUnit'
                  testResultsFiles: '**/e2e-tests-report*.xml'
                  testRunTitle: 'E2E Tests - Perf'
                  mergeTestResults: true
                condition: succeededOrFailed()

          - template: tools/yaml-templates/web-e2e-tests-job.yml@self
            parameters:
              AppHostingSdk: AppHostingSdk
              hostingEnvironmentType: 'standardWeb'
              teamsJsReferenceType: 'npm'
              testPrefixPatternGroups: ['{[0-9],[A-D],[a-d]}', '{[E],[e]}', '{[F-M],[f-m]}', '{[N-Z],[n-z]}']

          - template: tools/yaml-templates/web-e2e-tests-job.yml@self
            parameters:
              AppHostingSdk: AppHostingSdk
              hostingEnvironmentType: 'standardWeb'
              teamsJsReferenceType: 'scriptTag'
              testPrefixPatternGroups: ['{[0-9],[A-D],[a-d]}', '{[E],[e]}', '{[F-M],[f-m]}', '{[N-Z],[n-z]}']

          - template: tools/yaml-templates/web-e2e-tests-job.yml@self
            parameters:
              AppHostingSdk: AppHostingSdk
              hostingEnvironmentType: 'electron'
              teamsJsReferenceType: 'npm'

          - job: E2ETestCDN
            displayName: 'E2E Tests - CDN (only runs on release builds)'
            # This test only runs after deployment from a release branch and the new CDN version has been deployed
            # This check will run on the PR to merge the release branch back into main
            condition: and(
              eq(variables['Build.Reason'], 'PullRequest'),
              startsWith(variables['System.PullRequest.SourceBranch'], 'release/'),
              eq(variables['System.PullRequest.TargetBranch'], 'main')
              )
            pool:
              name: Azure-Pipelines-1ESPT-ExDShared
              image: 'ubuntu-latest'
              os: linux
            steps:
              - template: tools/yaml-templates/build-app-host.yml@self
                parameters:
                  appHostGitPath: AppHostingSdk

              - task: CmdLine@2
                displayName: 'Build Test App CDN'
                inputs:
                  script: |
                    pnpm build-test-app-CDN
                  workingDirectory: '$(ClientSdkProjectDirectory)'

              - bash: 'pnpm exec ts-node tools/cli/runAppsWithE2ETests.ts --useDataFromLocal=true --reportFileName=e2e-tests-report-cdn-script-tag --envType=cdnScriptTag'
                displayName: 'Run E2E integration tests with local script tag on latest cdn bundles'
                condition: succeeded()
                workingDirectory: '$(AppHostingSdkProjectDirectory)'
                enabled: true

              - task: PublishTestResults@2
                inputs:
                  testResultsFormat: 'JUnit'
                  testResultsFiles: '**/e2e-tests-report*.xml'
                  testRunTitle: 'E2E Tests - CDN'
                  mergeTestResults: true
                condition: succeededOrFailed()

          - job: E2ETestAndroidA
            displayName: 'E2E Tests - Android - Plan A'
            pool:
              name: Azure Pipelines
              image: macos-15
              os: macOS
            steps:
              - template: tools/yaml-templates/android-test.yml@self
                parameters:
                  androidAppHostingSdkGitPath: AndroidAppHostingSdk
                  shardNum: 2
                  shardIndex: 0

          - job: E2ETestAndroidB
            displayName: 'E2E Tests - Android - Plan B'
            pool:
              name: Azure Pipelines
              image: macos-15
              os: macOS
            steps:
              - template: tools/yaml-templates/android-test.yml@self
                parameters:
                  androidAppHostingSdkGitPath: AndroidAppHostingSdk
                  shardNum: 2
                  shardIndex: 1

          - job: E2ETestIOS
            displayName: 'E2E Tests - IOS - Plan A'
            pool:
              name: Azure Pipelines
              image: macos-latest-internal
              os: macOS
            steps:
              - template: tools/yaml-templates/ios-test.yml@self
                parameters:
                  iOSAppHostingSdkGitPath: IOSAppHostingSdk
                  testPlan: iosE2ETestPlanA

          - job: E2ETestIOS2
            displayName: 'E2E Tests - IOS - Plan B'
            pool:
              name: Azure Pipelines
              image: macos-latest-internal
              os: macOS
            steps:
              - template: tools/yaml-templates/ios-test.yml@self
                parameters:
                  iOSAppHostingSdkGitPath: IOSAppHostingSdk
                  testPlan: iosE2ETestPlanB
