variables:
  - group: InfoSec-SecurityResults

trigger:
  branches:
    include:
      - 'main'
      - 'release/*'

jobs:
  - job: Security
    displayName: 'Security Tasks'
    pool:
      vmImage: 'windows-latest'
    steps:
      - template: tools/yaml-templates/security.yml

  - job: Build
    displayName: 'Build Test Publish'
    pool:
      vmImage: 'windows-latest'
    steps:
      - template: tools/yaml-templates/build-test-publish.yml

  - job: E2ETest1
    displayName: 'E2E Test - Perf'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: tools/yaml-templates/build-app-host.yml
        parameters:
          appHostGitPath: git://$(AppHostingSdkGitPath)@$(AppHostingSdkGitRef)

      - bash: 'node tools/cli/runAppsWithE2ETests.js --appUrl=https://localhost:4002 --reportFileName=e2e-tests-report-perf --envType=perf'
        displayName: 'Run E2E Perf tests'
        condition: succeeded()
        workingDirectory: '$(AppHostingSdkProjectDirectory)'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/e2e-tests-report*.xml'
          testRunTitle: 'E2E Tests - Perf'
          mergeTestResults: true
        condition: succeededOrFailed()

  - job: E2ETest2
    displayName: 'E2E Test - Default'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: tools/yaml-templates/build-app-host.yml
        parameters:
          appHostGitPath: git://$(AppHostingSdkGitPath2)@$(AppHostingSdkGitRef)

      - bash: 'node tools/cli/runAppsWithE2ETests.js'
        displayName: 'Run E2E integration tests'
        condition: succeeded()
        workingDirectory: '$(AppHostingSdkProjectDirectory)'

      - task: Yarn@2
        displayName: 'Run tests for electron webview'
        inputs:
          Arguments: 'run xvfb-maybe mocha'
          ProjectDirectory: '$(AppHostingSdkProjectDirectory)'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/e2e-tests-report*.xml'
          testRunTitle: 'E2E Tests - Default'
          mergeTestResults: true
        condition: succeededOrFailed()

  - job: E2ETest3
    displayName: 'E2E Test - Local Tag'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: tools/yaml-templates/build-app-host.yml
        parameters:
          appHostGitPath: git://$(AppHostingSdkGitPath3)@$(AppHostingSdkGitRef)

      - task: Yarn@2
        displayName: 'Build Test App Local'
        inputs:
          Arguments: 'build-test-app-local'
          ProjectDirectory: '$(ClientSdkProjectDirectory)'

      - bash: 'node tools/cli/runAppsWithE2ETests.js --reportFileName=e2e-tests-report-local-script-tag --envType=localScriptTag'
        displayName: 'Run E2E integration tests with local script tag'
        condition: succeeded()
        workingDirectory: '$(AppHostingSdkProjectDirectory)'

      - task: Yarn@2
        displayName: 'Run tests for electron webview'
        inputs:
          Arguments: 'run xvfb-maybe mocha'
          ProjectDirectory: '$(AppHostingSdkProjectDirectory)'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/e2e-tests-report*.xml'
          testRunTitle: 'E2E Tests - Local Tag'
          mergeTestResults: true
        condition: succeededOrFailed()

  - job: E2ETest4
    displayName: 'E2E Test - BC Latest'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: tools/yaml-templates/build-app-host.yml
        parameters:
          appHostGitPath: git://$(AppHostingSdkGitPath4)@$(AppHostingSdkGitRef)

      - bash: 'node tools/cli/runAppsWithE2ETests.js --targetClientSdkCheckpoint=latestBackCompat --reportFileName=e2e-tests-report-bcompat'
        displayName: 'Run E2E back compat tests against latest version'
        condition: succeeded()
        workingDirectory: '$(AppHostingSdkProjectDirectory)'
        enabled: true

      - task: Yarn@2
        displayName: 'Run tests for electron webview'
        inputs:
          Arguments: 'run xvfb-maybe mocha'
          ProjectDirectory: '$(AppHostingSdkProjectDirectory)'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/e2e-tests-report*.xml'
          testRunTitle: 'E2E Tests - BC Latest'
          mergeTestResults: true
        condition: succeededOrFailed()

  - job: E2ETest5
    displayName: 'E2E Test - TeamsJS V1'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: tools/yaml-templates/build-app-host.yml
        parameters:
          appHostGitPath: git://$(AppHostingSdkGitPath5)@$(AppHostingSdkGitRef)

      - task: Yarn@2
        displayName: 'Build Teams Test App V1'
        inputs:
          Arguments: 'build-test-app-V1'
          ProjectDirectory: '$(ClientSdkProjectDirectory)'

      - bash: 'node tools/cli/runAppsWithE2ETests.js --envType=teamsV1 --targetClientSdkCheckpoint=1.12.1 --reportFileName=e2e-tests-report-V1'
        displayName: 'Run E2E integration tests on Teams Test App V1'
        condition: succeeded()
        workingDirectory: '$(AppHostingSdkProjectDirectory)'

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/e2e-tests-report*.xml'
          testRunTitle: 'E2E Tests - TeamsJs V1'
          mergeTestResults: true
        condition: succeededOrFailed()

  - job: E2ETestCDN
    displayName: 'E2E Test - CDN (only runs on release builds)'
    # This test only runs after deployment from a release branch and the new CDN version has been deployed
    # This check will run on the PR to merge the release branch back into main
    condition: and(
      eq(variables['Build.Reason'], 'PullRequest'),
      startsWith(variables['System.PullRequest.SourceBranch'], 'release/'),
      eq(variables['System.PullRequest.TargetBranch'], 'main')
      )
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: tools/yaml-templates/build-app-host.yml
        parameters:
          appHostGitPath: git://$(AppHostingSdkGitPath6)@$(AppHostingSdkGitRef)

      - task: Yarn@2
        displayName: 'Build Test App CDN'
        inputs:
          Arguments: 'build-test-app-CDN'
          ProjectDirectory: '$(ClientSdkProjectDirectory)'

      - bash: 'node tools/cli/runAppsWithE2ETests.js --reportFileName=e2e-tests-report-cdn-script-tag --envType=cdnScriptTag'
        displayName: 'Run E2E integration tests with local script tag on latest cdn bundles'
        condition: succeeded()
        workingDirectory: '$(AppHostingSdkProjectDirectory)'
        enabled: true

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/e2e-tests-report*.xml'
          testRunTitle: 'E2E Tests - CDN'
          mergeTestResults: true
        condition: succeededOrFailed()

  - job: E2ETestAndroid
    displayName: 'E2E Test - Android'
    pool:
      vmImage: 'macos-latest'
    steps:
      - template: tools/yaml-templates/android-test.yml
        parameters:
          androidAppHostingSdkGitPath: git://$(AndroidAppHostingSdkGitPath)
