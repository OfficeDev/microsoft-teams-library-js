# This does all the steps for cloning both app sdk and app host sdk repos and building them, then configuring the app host.
# Can be reused for any additional e2e tests and then paired with a node script with different parameters for which type of e2e test needs to run.
variables:
  pnpm_config_cache: $(Pipeline.Workspace)/.pnpm-store

parameters:
  - name: 'appHostGitPath'
    default: none
    type: string

steps:
  - checkout: self
  - checkout: ${{ parameters.appHostGitPath }}
    persistCredentials: true

  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install Node.js'

  - task: Cache@2
    inputs:
      key: 'pnpm | "$(Agent.OS)" | pnpm-lock.yaml'
      path: $(pnpm_config_cache)
    displayName: Cache pnpm

  - script: |
      node - add --global pnpm@latest-6
      pnpm config set store-dir $(pnpm_config_cache)
    displayName: 'Setup pnpm'

  - task: Pnpm@2
    displayName: 'Run pnpm on app hosting sdk'
    inputs:
      Arguments:
      ProjectDirectory: '$(AppHostingSdkProjectDirectory)'

  - task: Pnpm@2
    displayName: 'Build app hosting sdk'
    inputs:
      Arguments: 'build'
      ProjectDirectory: '$(AppHostingSdkProjectDirectory)'

  - task: Pnpm@2
    displayName: 'Run pnpm on client sdk'
    inputs:
      Arguments:
      ProjectDirectory: '$(ClientSdkProjectDirectory)'
    retryCountOnTaskFailure: 2

  - task: Pnpm@2
    displayName: 'Build client sdk'
    inputs:
      Arguments: 'build'
      ProjectDirectory: '$(ClientSdkProjectDirectory)'

  - task: CmdLine@2
    displayName: 'Configure host machine'
    inputs:
      script: |
        sudo chmod -R 755 ./ 
        sudo pnpm setup
      workingDirectory: '$(AppHostingSdkProjectDirectory)'
