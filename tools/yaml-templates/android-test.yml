parameters:
  - name: 'androidAppHostingSdkGitPath'
    default: none
    type: string

steps:
  - checkout: self
  - checkout: ${{ parameters.androidAppHostingSdkGitPath }}
    path: androidHost
    persistCredentials: true

  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install Node.js'

  # Cache task is used to create a cache of files which won't change between jobs, task, or steps.
  # In this task below a unique identifier(fingerprint) is created for the cache name, usually it's
  #   'command_name | operating_system | lockfile'
  # in our case it is 'pnpm | "$(Agent.OS)" | $(ClientSdkProjectDirectory)/pnpm-lock.yaml'
  # and for the path is the directory which needs to be cached.
  # Here `node_modules` are cached which are dowloaded from the scoped/private registry to build the mono-repo.
  - task: Cache@2
    inputs:
      key: 'pnpm | "$(Agent.OS)" | $(ClientSdkProjectDirectory)/pnpm-lock.yaml'
      path: $(Pipeline.Workspace)/.pnpm-store
    displayName: Cache pnpm

  - script: |
      corepack enable
      corepack prepare pnpm@7.30.1 --activate
      pnpm config set store-dir $(Pipeline.Workspace)/.pnpm-store
    displayName: 'Setup pnpm'

  - script: |
      pnpm install
    displayName: 'Install client sdk dependencies'
    workingDirectory: '$(ClientSdkProjectDirectory)'

  - script: |
      pnpm build-force-blazor
    displayName: 'Build client sdk'
    workingDirectory: '$(ClientSdkProjectDirectory)'

  - bash: 'nohup pnpm start-test-app &'
    displayName: 'Run sample test app in background'
    workingDirectory: '$(ClientSdkProjectDirectory)'

  - bash: 'chmod u+x install_emulator.sh && ./install_emulator.sh'
    displayName: 'Install Emulator'
    workingDirectory: '$(Agent.BuildDirectory)/androidHost/devtools/ci'

  - bash: 'chmod u+x ./gradlew && chmod u+x e2eTest.sh && ./e2eTest.sh'
    displayName: 'Run Android E2E Tests'
    workingDirectory: '$(Agent.BuildDirectory)/androidHost/apps/orangeandroid'

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFiles: '**/TEST-*.xml'
      failTaskOnFailedTests: false
      testRunTitle: 'E2E Tests - Android'
      searchFolder: '$(Agent.BuildDirectory)/androidHost'
      mergeTestResults: true
    condition: or(succeededOrFailed(), eq(variables['Agent.JobStatus'], 'Canceled'))
