{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
        "manifestVersion": {
            "type": "string",
            "description": "The version of the manifest schema this manifest is using."
        },
        "version": {
            "type": "string",
            "description": "The app version. Changes to the app should cause a version change. This version string must follow the semver standard."
        },
        "id": {
            "type": "string",
            "description": "A unique identifier for this app. The id must use reverse domain name notation.",
            "maxLength": 64
        },
        "developer": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The display name for the developer.",
                    "maxLength": 32
                },
                "websiteUrl": {
                    "type": "string",
                    "description": "The url to the developer's website."
                },
                "privacyUrl": {
                    "type": "string",
                    "description": "The url to the developer's privacy policy."
                },
                "termsOfUseUrl": {
                    "type": "string",
                    "description": "The url to the developer's terms of use."
                }
            },
            "required": [
                "name",
                "websiteUrl",
                "privacyUrl",
                "termsOfUseUrl"
            ]
        },
        "name": {
            "type": "string",
            "description": "The display name of the app.",
            "maxLength": 16
        },
        "description": {
            "type": "object",
            "properties": {
                "short": {
                    "type": "string",
                    "description": "A short description of the app used when space is limited. Maximum length is 80 characters.",
                    "maxLength": 80
                },
                "full": {
                    "type": "string",
                    "description": "The full description of the app. Maximum length is 256 characters.",
                    "maxLength": 256
                }
            },
            "required": [
                "short",
                "full"
            ]
        },
        "icons": {
            "type": "object",
            "description": "Each icon image file must be a transparent PNG, with a white or light-colored background.",
            "properties": {
                "44": {
                    "type": "string",
                    "description": "An icon for the app sized to 44x44."
                },
                "88": {
                    "type": "string",
                    "description": "An icon for the app sized to 88x88."
                }
            },
            "required": [
                "44",
                "88"
            ]
        },
        "accentColor": {
            "type": "string",
            "description": "A color to use in conjunction with the app's icons. The value must be a valid HTML color code starting with '#', for example `#4464ee`."
        },
        "galleryTabs": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "configurationUrl": {
                        "type": "string",
                        "description": "The url to use when configuring the tab."
                    },
                    "canUpdateConfiguration": {
                        "type": "boolean",
                        "description": "A value indicating whether an instance of the tab's configuration can be updated by the user after creation.",
                        "default": true
                    },
                    "scope": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "team",
                                "people",
                                "personal"
                            ],
                        "description": "Specifies whether the tab offers an experience in the context of a channel in a team, a chat between one or more people, or an experience scoped to an individual user alone. These options are non-exclusive"

                        }
                    }
                },
                "required": [
                    "configurationUrl",
                    "scope"
                ]
            }
        },
        "staticTabs": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "entityId": {
                        "type": "string",
                        "description": "A unique identifier for the entity which the tab displays."
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name of the tab."
                    },
                    "contentUrl": {
                        "type": "string",
                        "description": "The url which points to the entity UI to be displayed in the Teams canvas."
                    },
                    "websiteUrl": {
                        "type": "string",
                        "description": "The url to point at if a user opts to view in a browser."
                    },
                    "scope": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "team",
                                "people",
                                "personal"
                            ],
                        "description": "Specifies whether the tab offers an experience in the context of a channel in a team, a chat between one or more people, or an experience scoped to an individual user alone. These options are non-exclusive"
                        }
                    }
                },
                "required": [
                    "entityId",
                    "name",
                    "contentUrl",
                    "scope"
                ]
            }
        },
        "bots": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "botId": {
                        "type": "string",
                        "description": "A unique identifier for the bot that matches its ID in the bot framework.",
                        "maxLength": 64
                    },
                    "scope": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "team",
                                "people",
                                "personal"
                            ],
                        "description": "Specifies whether the bot offers an experience in the context of a channel in a team, a chat between one or more people, or an experience scoped to an individual user alone. These options are non-exclusive"
                        }
                    }
                },
                "required": [
                    "botId",
                    "scope"
                ]
            }
        },
        "permissions": {
            "type": "array",
            "items": {
                "enum": [
                    "identity"
                ]
            },
            "description": "Specifies which permissions the app requests"
        },
        "validDomains": {
            "type": "array",
            "description": "A list of valid domains from which the app expects to load any content. Domain listings can include wildcards, for example `*.example.com`. If your tab configuration or content UI needs to navigate to any other domain besides the one use for tab configuration, that domain must be specified here.",
            "items": {
                "type": "string"
            }
        }
    },
    "required": [
        "manifestVersion",
        "version",
        "id",
        "developer",
        "icons",
        "accentColor"
    ]
}