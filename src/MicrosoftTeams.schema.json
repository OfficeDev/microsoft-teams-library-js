{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
        "manifestVersion": {
            "type": "string",
            "description": "The version of the manifest schema this manifest is using."
        },
        "version": {
            "type": "string",
            "description": "The version of the manifest you are submitting. Changes to your manifest should cause a version change. This version string must follow the semver standard."
        },
        "id": {
            "type": "string",
            "description": "A unique identifier for this set of tabs and bots. This id must be a guid.",
            "maxLength": 36
        },
        "reverseDomainId": {
            "type": "string",
            "description": "A unique identifier for this set of tabs and bots in reverse domain notation.",
            "maxLength": 64
        },
        "developer": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The display name for the developer.",
                    "maxLength": 32
                },
                "websiteUrl": {
                    "type": "string",
                    "description": "The url to the developer's website."
                },
                "privacyUrl": {
                    "type": "string",
                    "description": "The url to the developer's privacy policy."
                },
                "termsOfUseUrl": {
                    "type": "string",
                    "description": "The url to the developer's terms of use."
                }
            },
            "required": [
                "name",
                "websiteUrl",
                "privacyUrl",
                "termsOfUseUrl"
            ]
        },
        "name": {
            "type": "string",
            "description": "The display name for the package.",
            "maxLength": 16
        },
        "description": {
            "type": "object",
            "properties": {
                "short": {
                    "type": "string",
                    "description": "A short description used when space is limited. Maximum length is 80 characters.",
                    "maxLength": 80
                },
                "full": {
                    "type": "string",
                    "description": "The full description of the package. Maximum length is 256 characters.",
                    "maxLength": 256
                }
            },
            "required": [
                "short",
                "full"
            ]
        },
        "icons": {
            "type": "object",
            "description": "Each icon image file must be a transparent PNG, with a white or light-colored background.",
            "properties": {
                "44": {
                    "type": "string",
                    "description": "An icon sized to 44x44."
                },
                "88": {
                    "type": "string",
                    "description": "An icon sized to 88x88."
                }
            },
            "required": [
                "44",
                "88"
            ]
        },
        "accentColor": {
            "type": "string",
            "description": "A color to use in conjunction with the icon. The value must be a valid HTML color code starting with '#', for example `#4464ee`."
        },
        "galleryTabs": {
            "type": "array",
            "description": "The set of tabs that users can optionally add to Teams",
            "items": {
                "type": "object",
                "properties": {
                    "configurationUrl": {
                        "type": "string",
                        "description": "The url to use when configuring the tab."
                    },
                    "canUpdateConfiguration": {
                        "type": "boolean",
                        "description": "A value indicating whether an instance of the tab's configuration can be updated by the user after creation.",
                        "default": true
                    },
                    "scope": {
                        "type": "array",
                        "description": "Specifies whether the tab offers an experience in the context of a channel in a team, or an experience scoped to an individual user alone. These options are non-exclusive",
                        "items": {
                            "enum": [
                                "team",
                                "personal"
                            ]
                        }
                    }
                },
                "required": [
                    "configurationUrl",
                    "scope"
                ]
            }
        },
        "staticTabs": {
            "type": "array",
            "description": "The set of tabs that are automically pinned within Teams as a presentation canvas when this package is added.",
            "items": {
                "type": "object",
                "properties": {
                    "entityId": {
                        "type": "string",
                        "description": "A unique identifier for the entity which the tab displays."
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name of the tab."
                    },
                    "contentUrl": {
                        "type": "string",
                        "description": "The url which points to the entity UI to be displayed in the Teams canvas."
                    },
                    "websiteUrl": {
                        "type": "string",
                        "description": "The url to point at if a user opts to view in a browser."
                    },
                    "scope": {
                        "type": "array",
                        "description": "Specifies whether the tab offers an experience in the context of a channel in a team, or an experience scoped to an individual user alone. These options are non-exclusive",
                        "items": {
                            "enum": [
                                "team",
                                "personal"
                            ]
                        }
                    }
                },
                "required": [
                    "entityId",
                    "name",
                    "contentUrl",
                    "scope"
                ]
            }
        },
        "bots": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "botId": {
                        "type": "string",
                        "description": "A unique identifier for the bot that matches its ID in the bot framework.",
                        "maxLength": 64
                    },
                    "needsChannelSelector": {
                        "type": "boolean",
                        "description": "This value describes whether or not the bot utilizes a user hint to add the bot to a specific channel.",
                        "default": "false"
                    },
                    "scope": {
                        "type": "array",
                        "description": "Specifies whether the bot offers an experience in the context of a channel in a team, or an experience scoped to an individual user alone. These options are non-exclusive",
                        "items": {
                            "enum": [
                                "team",
                                "personal"
                            ]
                        }
                    },
                    "commandList": {
                        "type": "array",
                        "maxItems": 2,
                        "description": "The list of commands that the bot supplies, including their usage, description, and the scope for which the commands are valid. A seperate command list should be used for each scope.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "scope": {
                                    "type": "array",
                                    "description": "Specifies the scopes for which the command list is valid",
                                    "items": {
                                        "enum": [
                                            "team",
                                            "personal"
                                        ]
                                    }
                                },
                                "commands": {
                                    "type": "array",
                                    "maxItems": 10,
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "title": {
                                                "type": "string",
                                                "description": "The one word command name",
                                                "maxLength": 16
                                            },
                                            "usageHint": {
                                                "type": "string",
                                                "description": "A short usage template for the command",
                                                "maxLength": 32
                                            },
                                            "shortDescription": {
                                                "type": "string",
                                                "description": "A short description of the command",
                                                "maxLength": 32
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "Payload to use for the bot action type. E.g, a URL for an OpenURL type."
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum" : ["imBack", "invoke", "openURL", "prompt", "gotoTab"],
                                                "description": "The type of bot interaction the command defines.",
                                                "maxLength": 16
                                            },
                                            "image": {
                                                "type": "string",
                                                "description": "An optional URL to an image to use for the command entry"
                                            }
                                        },
                                        "required":[
                                            "title",
                                            "value",
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required":[
                                "scope",
                                "commands"
                            ]
                        }
                    }
                },
                "required": [
                    "botId",
                    "scope"
                ]
            }
        },
        "permissions": {
            "type": "array",
            "description": "Specifies which permissions the bots or tabs request.",
            "items": {
                "enum": [
                    "identity",
                    "messageTeamMembers"
                ]
            }
        },
        "validDomains": {
            "type": "array",
            "description": "A list of valid domains from which the tabs expect to load any content. Domain listings can include wildcards, for example `*.example.com`. If your tab configuration or content UI needs to navigate to any other domain besides the one use for tab configuration, that domain must be specified here.",
            "items": {
                "type": "string"
            }
        }
    },
    "required": [
        "manifestVersion",
        "version",
        "id",
        "reverseDomainId",
        "developer",
        "icons",
        "accentColor"
    ]
}